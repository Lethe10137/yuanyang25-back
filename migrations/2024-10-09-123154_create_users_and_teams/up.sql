CREATE TABLE "users" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"openid" VARCHAR(64) NOT NULL UNIQUE,
	"team" INTEGER,
	"username" VARCHAR(255) NOT NULL,
	"password" VARCHAR(64) NOT NULL,
	"salt" VARCHAR(64) NOT NULL,
	"privilege" INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY("id")
);


CREATE INDEX "users_index_1"
ON "users" ("openid");

CREATE TABLE "team" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"is_staff" BOOLEAN NOT NULL DEFAULT false,
	"token_balance" BIGINT NOT NULL DEFAULT 5000,
	"confirmed" BOOLEAN NOT NULL DEFAULT false,
	"max_size" INTEGER NOT NULL DEFAULT 3,
	"size" INTEGER NOT NULL DEFAULT 0,
	"salt" VARCHAR(64) NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "puzzle" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"meta" BOOLEAN NOT NULL DEFAULT false,
	"bounty" INTEGER NOT NULL,
	"title" VARCHAR(64) NOT NULL,
    "decipher" INTEGER NOT NULL,
    "depth" INTEGER NOT NULL,
	PRIMARY KEY("id")
);


CREATE TABLE "answer" (
    "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "puzzle" INTEGER NOT NULL,
    "level" INTEGER NOT NULL,
    "sha256" CHAR(64) NOT NULL,

    PRIMARY KEY("id"),
    CONSTRAINT "fk_puzzle_answer"
        FOREIGN KEY ("puzzle") REFERENCES "puzzle" ("id")
        ON DELETE CASCADE, -- 如果puzzle没了，这个也会被删除
    CONSTRAINT "unique_puzzle_level"
        UNIQUE ("puzzle", "level")
);

CREATE INDEX "answer_index_0"
ON "answer" ("puzzle");


CREATE TABLE "submission" (
    "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "team" INTEGER NOT NULL,
    "reward" BIGINT NOT NULL,
    "time" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "puzzle" INTEGER NOT NULL,
    "depth" INTEGER NOT NULL,
    PRIMARY KEY("id"),
	CONSTRAINT "fk_team_submission"
        FOREIGN KEY ("team") REFERENCES "team" ("id")
        ON DELETE CASCADE, 
    CONSTRAINT "fk_puzzle_submission"
        FOREIGN KEY ("puzzle") REFERENCES "puzzle" ("id")
        ON DELETE CASCADE, 
    CONSTRAINT "unique_team_puzzle_depth"
        UNIQUE ("team", "puzzle", "depth") 
);


CREATE INDEX "submission_index_puzzle_depth" 
ON "submission" ("puzzle", "depth");

CREATE INDEX "submission_index_team_depth" 
ON "submission" ("team", "depth");


CREATE TABLE "oracle" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"puzzle" INTEGER NOT NULL,
	"team" INTEGER NOT NULL,
	"cost" BIGINT NOT NULL,
	"refund" BIGINT NOT NULL DEFAULT 0,
	"query" TEXT NOT NULL,
	"response" TEXT NOT NULL,
	PRIMARY KEY("id"),
	CONSTRAINT "fk_team_oracle"
        FOREIGN KEY ("team") REFERENCES "team" ("id")
        ON DELETE CASCADE, 
    CONSTRAINT "fk_puzzle_oracle"
        FOREIGN KEY ("puzzle") REFERENCES "puzzle" ("id")
        ON DELETE CASCADE
);

CREATE INDEX "oracle_index_0"
ON "oracle" ("puzzle", "team");


CREATE TABLE "transaction" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"team" INTEGER NOT NULL,
	"desp" VARCHAR(255) NOT NULL,
	"amount" BIGINT NOT NULL,
	"balance" BIGINT NOT NULL,
	"allowance" BIGINT NOT NULL,
    "purchase_ref" INTEGER,
	"time" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY("id"),
	CONSTRAINT "fk_team_transaction"
        FOREIGN KEY ("team") REFERENCES "team" ("id")
        ON DELETE CASCADE
);

CREATE INDEX "transaction_index_0"
ON "transaction" ("team");

CREATE UNIQUE INDEX unique_team_purchase
ON transaction ("team", "purchase_ref")
WHERE "purchase_ref" IS NOT NULL;


CREATE TABLE "decipher" (
	"id" INTEGER NOT NULL UNIQUE,
	"pricing_type" INTEGER NOT NULL,
	"base_price" INTEGER NOT NULL,
	"depth" INTEGER NOT NULL,
	"root" CHAR(64) NOT NULL,
	PRIMARY KEY("id")
);

CREATE TABLE "unlock" (
    "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "team" INTEGER NOT NULL,
    "decipher" INTEGER NOT NULL,
    "level" INTEGER NOT NULL,
    PRIMARY KEY("id"),
    CONSTRAINT "fk_unlock_team"
        FOREIGN KEY ("team") REFERENCES "team" ("id")
        ON DELETE CASCADE, -- 如果 team 被删除，相应记录也被删除
    CONSTRAINT "fk_unlock_decipher"
        FOREIGN KEY ("decipher") REFERENCES "decipher" ("id")
        ON DELETE CASCADE, -- 如果 decipher 被删除，相应记录也被删除
    CONSTRAINT "unique_team_decipher"
        UNIQUE ("team", "decipher") -- 确保 team 和 decipher 的组合唯一
);

-- 为 (team, decipher) 创建索引以优化查询
CREATE INDEX "unlock_index_team_decipher"
ON "unlock" ("team", "decipher");


CREATE TABLE "wrong_answer_cnt" (
    "id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
    "team" INTEGER NOT NULL,
    "puzzle" INTEGER NOT NULL,
    "token_penalty_level" INTEGER NOT NULL,
    "time_penalty_level" INTEGER NOT NULL,
    "time_penalty_until" TIMESTAMPTZ NOT NULL,
    PRIMARY KEY("id"),
    CONSTRAINT "unique_team_puzzle"
        UNIQUE ("team", "puzzle"), -- 确保 (team, puzzle) 的组合唯一
    CONSTRAINT "fk_wrong_answer_cnt_team"
        FOREIGN KEY ("team") REFERENCES "team" ("id")
        ON DELETE CASCADE, -- 如果 team 被删除，相应记录也会被删除
    CONSTRAINT "fk_wrong_answer_cnt_puzzle"
        FOREIGN KEY ("puzzle") REFERENCES "puzzle" ("id")
        ON DELETE CASCADE  -- 如果 puzzle 被删除，相应记录也会被删除
);

-- 为 (team, puzzle) 创建索引以优化查询
CREATE INDEX "wrong_answer_cnt_index_team_puzzle"
ON "wrong_answer_cnt" ("team", "puzzle");